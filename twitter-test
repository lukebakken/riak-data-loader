#!/usr/bin/env ruby

$LOAD_PATH.unshift(File.join(File.expand_path(File.dirname(__FILE__)), 'lib'))
require 'bundler'
Bundler.require # removes need for 'bundle exec'

require 'twitter_auth'
require 'twitter'
require 'yajl'
require 'time'

$stdout.sync = true

begin
  object_count = Integer(ARGV[0])
rescue ArgumentError, TypeError
  object_count = 8
end

client = Twitter::Streaming::Client.new(:raw_data => true) do |config|
  twauth                     = TwitterAuth.new
  config.consumer_key        = twauth.consumer_key
  config.consumer_secret     = twauth.consumer_secret
  config.access_token        = twauth.access_token
  config.access_token_secret = twauth.access_token_secret
end

shown = 0
begin

  $stdout.puts("[")

  client.sample do |data|
    Yajl::Parser.parse(data, :symbolize_keys => true) do |parsed|
      unless parsed[:delete]

        created_at = Time.parse(parsed[:created_at])
        # puts("ID: #{parsed[:id]} Created At: #{created_at.utc.xmlschema}")

        parsed[:created_at] = created_at.utc.xmlschema.to_s

        Yajl::Encoder.encode(parsed, $stdout, :pretty => false)

        shown += 1
        if shown >= object_count
          $stdout.puts("\n]")
          exit 0
        else
          $stdout.puts(",")
        end
      end
    end
  end

rescue Interrupt
  $stdout.puts("]")
  $stderr.puts("Exiting!")
rescue => e
  $stderr.puts("Exception: #{e}\n#{e.backtrace}")
end
